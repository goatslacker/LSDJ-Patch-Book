<?php
// auto-generated by sfPropelCrud
// date: 2009/03/15 20:44:07
?>
<?php

/**
 * bank actions.
 *
 * @package    lsdj-patches
 * @subpackage bank
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class bankActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('bank', 'list');
  }

  public function executeList()
  {
    $this->banks = BankPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->bank = BankPeer::retrieveByPk($this->getRequestParameter('id'));
	$this->instruments = InstrumentPeer::getByBank($this->getRequestParameter('id'));
    $this->forward404Unless($this->bank);
  }

  public function executeCreate()
  {
    $this->bank = new Bank();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->bank = BankPeer::retrieveByPk($this->getRequestParameter('id'));
	$this->user = $this->getUser()->getSubscriber();
    $this->forward404Unless($this->bank);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $bank = new Bank();
    }
    else
    {
      $bank = BankPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($bank);
    }

    $bank->setId($this->getRequestParameter('id'));
    $bank->setName($this->getRequestParameter('name'));
    $bank->setOwner($this->getUser()->getSubscriber());
    $bank->save();

	$bank_id = $bank->getId() ? $bank->getId() : $this->getRequestParameter('id');
	InstrumentBankPeer::Clear($bank_id);
	foreach ($this->getRequestParameter('instruments') as $instrument):
	  $instrumentBank = new InstrumentBank();
	  $instrumentBank->setBankId($bank_id);
	  $instrumentBank->setInstrumentId($instrument);
	  if ($instrumentBank->getInstrumentId() != 0) $instrumentBank->save();
	endforeach;

    return $this->redirect('@bank?owner='.$bank->getOwner().'&id='.$bank->getId());
  }

  public function executeDelete()
  {
    $bank = BankPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($bank);

    $bank->delete();

    return $this->redirect('bank/list');
  }
}
